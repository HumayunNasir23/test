"""empty message

Revision ID: 04ec3c8ecbdd
Revises: 791a7a43ea6a
Create Date: 2020-02-19 08:40:04.058211

"""

# revision identifiers, used by Alembic.
revision = '04ec3c8ecbdd'
down_revision = '791a7a43ea6a'

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ibm_address_prefixes', sa.Column('is_provisioning', sa.Boolean(), nullable=False))
    op.create_unique_constraint('uix_ibm_address_prefix_name_vpc_id_is_provisioning', 'ibm_address_prefixes', ['name', 'vpc_id', 'is_provisioning'])
    op.drop_index('uix_ibm_address_prefix_name_vpc_id', table_name='ibm_address_prefixes')
    op.add_column('ibm_ike_policy', sa.Column('is_provisioning', sa.Boolean(), nullable=False))
    op.create_unique_constraint('uix_ibm_ike_policy_name_region_cloud_id_is_provisioning', 'ibm_ike_policy', ['name', 'region', 'cloud_id', 'is_provisioning'])
    op.drop_index('uix_ibm_ike_policy_name_region_cloud_id', table_name='ibm_ike_policy')
    op.add_column('ibm_instances', sa.Column('classical_instance_id', sa.Integer(), nullable=True))
    op.add_column('ibm_instances', sa.Column('is_provisioning', sa.Boolean(), nullable=False))
    op.create_unique_constraint('uix_ibm_name_vpc_id_cloud_id_region_is_provisioning', 'ibm_instances', ['name', 'vpc_id', 'cloud_id', 'region', 'is_provisioning'])
    op.drop_index('uix_ibm_name_vpc_id_cloud_id_region', table_name='ibm_instances')
    op.add_column('ibm_ipsec_policy', sa.Column('is_provisioning', sa.Boolean(), nullable=False))
    op.create_unique_constraint('uix_ibm_ipsec_policy_name_region_cloud_id_is_provisioning', 'ibm_ipsec_policy', ['name', 'region', 'cloud_id', 'is_provisioning'])
    op.drop_index('uix_ibm_ipsec_policy_name_region_cloud_id', table_name='ibm_ipsec_policy')
    op.add_column('ibm_load_balancers', sa.Column('is_provisioning', sa.Boolean(), nullable=False))
    op.create_unique_constraint('uix_ibm_lb_name_vpc_cloud_id_region_is_provisioning', 'ibm_load_balancers', ['name', 'vpc_id', 'cloud_id', 'region', 'is_provisioning'])
    op.drop_index('uix_ibm_lb_name_vpc_cloud_id_region', table_name='ibm_load_balancers')
    op.add_column('ibm_network_acls', sa.Column('is_provisioning', sa.Boolean(), nullable=False))
    op.create_unique_constraint('uix_ibm_acl_name_vpc_region_cloud_id_is_provisioning', 'ibm_network_acls', ['name', 'region', 'vpc_id', 'cloud_id', 'is_provisioning'])
    op.drop_index('uix_ibm_acl_name_vpc_region_cloud_id', table_name='ibm_network_acls')
    op.add_column('ibm_public_gateways', sa.Column('is_provisioning', sa.Boolean(), nullable=False))
    op.create_unique_constraint('uix_ibm_public_gateway_name_vpc_cloud_id_is_provisioning', 'ibm_public_gateways', ['name', 'vpc_id', 'cloud_id', 'region', 'is_provisioning'])
    op.drop_index('uix_ibm_public_gateway_name_vpc_cloud_id', table_name='ibm_public_gateways')
    op.add_column('ibm_security_groups', sa.Column('is_provisioning', sa.Boolean(), nullable=False))
    op.create_unique_constraint('uix_ibm_security_group_name_vpc_id_region_is_provisioning', 'ibm_security_groups', ['name', 'vpc_id', 'region', 'is_provisioning'])
    op.drop_index('uix_ibm_security_group_name_vpc_id_region', table_name='ibm_security_groups')
    op.add_column('ibm_ssh_keys', sa.Column('is_provisioning', sa.Boolean(), nullable=False))
    op.create_unique_constraint('uix_ibm_ssh_name_region_cloud_id_is_provisioning', 'ibm_ssh_keys', ['name', 'region', 'cloud_id', 'is_provisioning'])
    op.drop_index('uix_ibm_ssh_name_region_cloud_id', table_name='ibm_ssh_keys')
    op.add_column('ibm_subnets', sa.Column('is_provisioning', sa.Boolean(), nullable=False))
    op.drop_constraint('uix_ibm_subnet_name_cloud_id_vpc_id', 'ibm_subnets', type_='unique')
    op.create_unique_constraint('uix_ibm_subnet_name_cloud_id_vpc_id', 'ibm_subnets', ['name', 'cloud_id', 'vpc_id', 'region', 'is_provisioning'])
    op.add_column('ibm_vpc_networks', sa.Column('is_workspace', sa.Boolean(), nullable=False))
    op.add_column('ibm_vpc_networks', sa.Column('softlayer_id', sa.String(length=32), nullable=True))
    op.create_foreign_key("softlayer_clouds", 'ibm_vpc_networks', 'softlayer_clouds', ['softlayer_id'], ['id'])
    op.add_column('ibm_vpn_gateways', sa.Column('is_provisioning', sa.Boolean(), nullable=False))
    op.create_unique_constraint('uix_ibm_vpn_gateway_vpc_cloud_id_is_provisioning', 'ibm_vpn_gateways', ['name', 'vpc_id', 'cloud_id', 'is_provisioning'])
    op.drop_index('uix_ibm_vpn_gateway_vpc_cloud_id', table_name='ibm_vpn_gateways')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('uix_ibm_vpn_gateway_vpc_cloud_id', 'ibm_vpn_gateways', ['name', 'vpc_id', 'cloud_id'], unique=True)
    op.drop_constraint('uix_ibm_vpn_gateway_vpc_cloud_id_is_provisioning', 'ibm_vpn_gateways', type_='unique')
    op.drop_column('ibm_vpn_gateways', 'is_provisioning')
    op.drop_constraint("softlayer_clouds", 'ibm_vpc_networks', type_='foreignkey')
    op.drop_column('ibm_vpc_networks', 'softlayer_id')
    op.drop_column('ibm_vpc_networks', 'is_workspace')
    op.drop_constraint('uix_ibm_subnet_name_cloud_id_vpc_id', 'ibm_subnets', type_='unique')
    op.create_unique_constraint('uix_ibm_subnet_name_cloud_id_vpc_id', 'ibm_subnets', ['name', 'cloud_id', 'vpc_id', 'region'])
    op.drop_column('ibm_subnets', 'is_provisioning')
    op.create_index('uix_ibm_ssh_name_region_cloud_id', 'ibm_ssh_keys', ['name', 'region', 'cloud_id'], unique=True)
    op.drop_constraint('uix_ibm_ssh_name_region_cloud_id_is_provisioning', 'ibm_ssh_keys', type_='unique')
    op.drop_column('ibm_ssh_keys', 'is_provisioning')
    op.create_index('uix_ibm_security_group_name_vpc_id_region', 'ibm_security_groups', ['name', 'vpc_id', 'region'], unique=True)
    op.drop_constraint('uix_ibm_security_group_name_vpc_id_region_is_provisioning', 'ibm_security_groups', type_='unique')
    op.drop_column('ibm_security_groups', 'is_provisioning')
    op.create_index('uix_ibm_public_gateway_name_vpc_cloud_id', 'ibm_public_gateways', ['name', 'vpc_id', 'cloud_id', 'region'], unique=True)
    op.drop_constraint('uix_ibm_public_gateway_name_vpc_cloud_id_is_provisioning', 'ibm_public_gateways', type_='unique')
    op.drop_column('ibm_public_gateways', 'is_provisioning')
    op.create_index('uix_ibm_acl_name_vpc_region_cloud_id', 'ibm_network_acls', ['name', 'region', 'vpc_id', 'cloud_id'], unique=True)
    op.drop_constraint('uix_ibm_acl_name_vpc_region_cloud_id_is_provisioning', 'ibm_network_acls', type_='unique')
    op.drop_column('ibm_network_acls', 'is_provisioning')
    op.create_index('uix_ibm_lb_name_vpc_cloud_id_region', 'ibm_load_balancers', ['name', 'vpc_id', 'cloud_id', 'region'], unique=True)
    op.drop_constraint('uix_ibm_lb_name_vpc_cloud_id_region_is_provisioning', 'ibm_load_balancers', type_='unique')
    op.drop_column('ibm_load_balancers', 'is_provisioning')
    op.create_index('uix_ibm_ipsec_policy_name_region_cloud_id', 'ibm_ipsec_policy', ['name', 'region', 'cloud_id'], unique=True)
    op.drop_constraint('uix_ibm_ipsec_policy_name_region_cloud_id_is_provisioning', 'ibm_ipsec_policy', type_='unique')
    op.drop_column('ibm_ipsec_policy', 'is_provisioning')
    op.create_index('uix_ibm_name_vpc_id_cloud_id_region', 'ibm_instances', ['name', 'vpc_id', 'cloud_id', 'region'], unique=True)
    op.drop_constraint('uix_ibm_name_vpc_id_cloud_id_region_is_provisioning', 'ibm_instances', type_='unique')
    op.drop_column('ibm_instances', 'is_provisioning')
    op.drop_column('ibm_instances', 'classical_instance_id')
    op.create_index('uix_ibm_ike_policy_name_region_cloud_id', 'ibm_ike_policy', ['name', 'region', 'cloud_id'], unique=True)
    op.drop_constraint('uix_ibm_ike_policy_name_region_cloud_id_is_provisioning', 'ibm_ike_policy', type_='unique')
    op.drop_column('ibm_ike_policy', 'is_provisioning')
    op.create_index('uix_ibm_address_prefix_name_vpc_id', 'ibm_address_prefixes', ['name', 'vpc_id'], unique=True)
    op.drop_constraint('uix_ibm_address_prefix_name_vpc_id_is_provisioning', 'ibm_address_prefixes', type_='unique')
    op.drop_column('ibm_address_prefixes', 'is_provisioning')
    # ### end Alembic commands ###