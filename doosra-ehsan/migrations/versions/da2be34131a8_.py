"""empty message

Revision ID: da2be34131a8
Revises: 2621a49ffb6e
Create Date: 2019-07-16 10:08:51.053760

"""

# revision identifiers, used by Alembic.
revision = 'da2be34131a8'
down_revision = '2621a49ffb6e'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gcp_load_balancers',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('cloud_project_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['cloud_project_id'], ['gcp_cloud_projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp_forwarding_rules',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('ip_version', sa.String(length=50), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('ip_address', sa.String(length=255), nullable=True),
    sa.Column('ip_protocol', sa.String(length=255), nullable=False),
    sa.Column('port_range', sa.String(length=255), nullable=True),
    sa.Column('load_balancing_scheme', sa.String(length=255), nullable=False),
    sa.Column('cloud_project_id', sa.String(length=32), nullable=False),
    sa.Column('load_balancer_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['cloud_project_id'], ['gcp_cloud_projects.id'], ),
    sa.ForeignKeyConstraint(['load_balancer_id'], ['gcp_load_balancers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp_target_proxies',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('forwarding_rule_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['forwarding_rule_id'], ['gcp_forwarding_rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp_url_maps',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('target_proxy_id', sa.String(length=32), nullable=False),
    sa.Column('cloud_project_id', sa.String(length=32), nullable=False),
    sa.Column('load_balancer_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['cloud_project_id'], ['gcp_cloud_projects.id'], ),
    sa.ForeignKeyConstraint(['load_balancer_id'], ['gcp_load_balancers.id'], ),
    sa.ForeignKeyConstraint(['target_proxy_id'], ['gcp_target_proxies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp_host_rules',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('hosts', sa.Text(), nullable=True),
    sa.Column('url_map_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['url_map_id'], ['gcp_url_maps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp_path_matchers',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('host_rule_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['host_rule_id'], ['gcp_host_rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp_path_rules',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('paths', sa.Text(), nullable=True),
    sa.Column('path_matcher_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['path_matcher_id'], ['gcp_path_matchers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp_backend_services',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('protocol', sa.String(length=255), nullable=True),
    sa.Column('port', sa.String(length=255), nullable=True),
    sa.Column('port_name', sa.String(length=255), nullable=True),
    sa.Column('timeout', sa.String(length=255), nullable=True),
    sa.Column('enable_cdn', sa.Boolean(), nullable=True),
    sa.Column('cloud_project_id', sa.String(length=32), nullable=False),
    sa.Column('url_map_id', sa.String(length=32), nullable=True),
    sa.Column('path_matcher_id', sa.String(length=32), nullable=True),
    sa.Column('path_rule_id', sa.String(length=32), nullable=True),
    sa.Column('load_balancer_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['cloud_project_id'], ['gcp_cloud_projects.id'], ),
    sa.ForeignKeyConstraint(['load_balancer_id'], ['gcp_load_balancers.id'], ),
    sa.ForeignKeyConstraint(['path_matcher_id'], ['gcp_path_matchers.id'], ),
    sa.ForeignKeyConstraint(['path_rule_id'], ['gcp_path_rules.id'], ),
    sa.ForeignKeyConstraint(['url_map_id'], ['gcp_url_maps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp_backends',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('max_cpu_utilization', sa.String(length=255), nullable=True),
    sa.Column('capacity_scaler', sa.String(length=255), nullable=True),
    sa.Column('backend_service_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['backend_service_id'], ['gcp_backend_services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp_health_checks',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('healthy_threshold', sa.Integer(), nullable=True),
    sa.Column('unhealthy_threshold', sa.Integer(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.Column('check_interval', sa.Integer(), nullable=True),
    sa.Column('cloud_project_id', sa.String(length=32), nullable=False),
    sa.Column('backend_service_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['backend_service_id'], ['gcp_backend_services.id'], ),
    sa.ForeignKeyConstraint(['cloud_project_id'], ['gcp_cloud_projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp_instance_groups',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('zone', sa.String(length=255), nullable=False),
    sa.Column('vpc_network_id', sa.String(length=32), nullable=False),
    sa.Column('backend_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['backend_id'], ['gcp_backends.id'], ),
    sa.ForeignKeyConstraint(['vpc_network_id'], ['gcp_vpc_networks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gcp_port_health_checks',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('port', sa.String(length=255), nullable=False),
    sa.Column('request', sa.String(length=255), nullable=True),
    sa.Column('response', sa.String(length=255), nullable=True),
    sa.Column('proxy_header', sa.String(length=255), nullable=True),
    sa.Column('health_check_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['health_check_id'], ['gcp_health_checks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('gcp_instances', sa.Column('instance_group_id', sa.String(length=32), nullable=True))
    op.create_foreign_key('instance_instance_groups_ibfk_1', 'gcp_instances', 'gcp_instance_groups', ['instance_group_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('instance_instance_groups_ibfk_1', 'gcp_instances', type_='foreignkey')
    op.drop_column('gcp_instances', 'instance_group_id')
    op.drop_table('gcp_port_health_checks')
    op.drop_table('gcp_instance_groups')
    op.drop_table('gcp_health_checks')
    op.drop_table('gcp_backends')
    op.drop_table('gcp_backend_services')
    op.drop_table('gcp_path_rules')
    op.drop_table('gcp_path_matchers')
    op.drop_table('gcp_host_rules')
    op.drop_table('gcp_url_maps')
    op.drop_table('gcp_target_proxies')
    op.drop_table('gcp_forwarding_rules')
    op.drop_table('gcp_load_balancers')
    # ### end Alembic commands ###